[{"/home/alexander/ApplianceController/frontend/src/index.js":"1","/home/alexander/ApplianceController/frontend/src/App.js":"2","/home/alexander/ApplianceController/frontend/src/redux/store.js":"3","/home/alexander/ApplianceController/frontend/src/routes.js":"4","/home/alexander/ApplianceController/frontend/src/redux/reducer.js":"5","/home/alexander/ApplianceController/frontend/src/components/Navbar/Navbar.js":"6","/home/alexander/ApplianceController/frontend/src/redux/actionTypes.js":"7","/home/alexander/ApplianceController/frontend/src/components/AppliancesList/AppliancesList.js":"8","/home/alexander/ApplianceController/frontend/src/components/ApplianceCreator/ApplianceCreator.js":"9","/home/alexander/ApplianceController/frontend/src/redux/thunks.js":"10","/home/alexander/ApplianceController/frontend/src/components/Appliance/Appliance.js":"11","/home/alexander/ApplianceController/frontend/src/hooks/useForm.js":"12","/home/alexander/ApplianceController/frontend/src/redux/actions.js":"13"},{"size":381,"mtime":1607344847336,"results":"14","hashOfConfig":"15"},{"size":297,"mtime":1607342489722,"results":"16","hashOfConfig":"15"},{"size":278,"mtime":1607296166531,"results":"17","hashOfConfig":"15"},{"size":433,"mtime":1607341811339,"results":"18","hashOfConfig":"15"},{"size":349,"mtime":1607296166531,"results":"19","hashOfConfig":"15"},{"size":284,"mtime":1607296166531,"results":"20","hashOfConfig":"15"},{"size":151,"mtime":1607296166531,"results":"21","hashOfConfig":"15"},{"size":643,"mtime":1607330167857,"results":"22","hashOfConfig":"15"},{"size":1319,"mtime":1607330167857,"results":"23","hashOfConfig":"15"},{"size":1216,"mtime":1607296166531,"results":"24","hashOfConfig":"15"},{"size":2548,"mtime":1607330167857,"results":"25","hashOfConfig":"15"},{"size":326,"mtime":1607296166531,"results":"26","hashOfConfig":"15"},{"size":286,"mtime":1607342080653,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"y6hd6p",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/alexander/ApplianceController/frontend/src/index.js",[],"/home/alexander/ApplianceController/frontend/src/App.js",[],["57","58"],"/home/alexander/ApplianceController/frontend/src/redux/store.js",[],"/home/alexander/ApplianceController/frontend/src/routes.js",["59"],"import React from 'react'\nimport { AppliancesList } from './components/AppliancesList/AppliancesList'\nimport { ApplianceCreator } from './components/ApplianceCreator/ApplianceCreator'\nimport { Switch, Route, Redirect } from 'react-router-dom'\n\nexport const useRoutes = () => {\n  return (\n    <Switch>\n      <Route path=\"/create\" component={ApplianceCreator} />\n      <Route path=\"/\" component={AppliancesList} />\n    </Switch>\n  )\n}\n","/home/alexander/ApplianceController/frontend/src/redux/reducer.js",[],"/home/alexander/ApplianceController/frontend/src/components/Navbar/Navbar.js",[],"/home/alexander/ApplianceController/frontend/src/redux/actionTypes.js",[],"/home/alexander/ApplianceController/frontend/src/components/AppliancesList/AppliancesList.js",[],"/home/alexander/ApplianceController/frontend/src/components/ApplianceCreator/ApplianceCreator.js",[],"/home/alexander/ApplianceController/frontend/src/redux/thunks.js",[],"/home/alexander/ApplianceController/frontend/src/components/Appliance/Appliance.js",["60","61","62"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useForm } from '../../hooks/useForm'\nimport { fetchDeleteAppliance, fetchEditAppliance } from '../../redux/thunks'\nimport './Appliance.css'\n\nexport const Appliance = ({ appliance }) => {\n  const dispatch = useDispatch()\n  const [editArea, setEditArea] = useState(false)\n  const [data, setData] = useForm({\n    _id: appliance._id,\n    model: appliance.model,\n    room: appliance.room,\n    applianceType: appliance.applianceType,\n    connection: appliance.connection,\n    task: appliance.task,\n  })\n\n  return (\n    <div className=\"appliance\">\n      {editArea ? (\n        <div className=\"appliance__editArea\">\n          <input\n            name=\"model\"\n            defaultValue={data.model}\n            onChange={setData}\n            placeholder=\"example: EFLS527UIW\"\n          />\n          <select name=\"room\" defaultValue={data.room} onChange={setData}>\n            <option selected value=\"bathroom\">\n              bathroom\n            </option>\n            <option value=\"kitchen\">kitchen</option>\n          </select>\n          <select\n            name=\"applianceType\"\n            defaultValue={data.applianceType}\n            onChange={setData}\n          >\n            <option selected value=\"washingMachine\">\n              washing machine\n            </option>\n            <option value=\"oven\">oven</option>\n          </select>\n          <button\n            onClick={() => {\n              dispatch(fetchEditAppliance(data))\n              setEditArea((state) => !state)\n            }}\n          >\n            SAVE\n          </button>\n        </div>\n      ) : (\n        <>\n          <div className=\"appliance__title\">\n            <h2>{appliance.model}</h2>\n            {appliance.connection ? (\n              <div className=\"appliance__connection appliance__online\"><img src=\"/images/wf.png\" /></div>\n            ) : null }\n          </div>\n\n          {appliance.applianceType === 'washingMachine' ? (\n            <img src=\"/images/w.png\" />\n          ) : (\n            <img src=\"/images/ov.png\" />\n          )}\n          <p>location: {appliance.room}</p>\n          <div className=\"appliance__buttons\">\n            <button\n              onClick={(e) => {\n                e.preventDefault()\n                dispatch(fetchDeleteAppliance(appliance))\n              }}\n            >\n              DELETE\n            </button>\n            <button onClick={() => setEditArea((state) => !state)}>EDIT</button>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","/home/alexander/ApplianceController/frontend/src/hooks/useForm.js",[],"/home/alexander/ApplianceController/frontend/src/redux/actions.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":25,"nodeType":"69","messageId":"70","endLine":4,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":59,"column":72,"nodeType":"73","endLine":59,"endColumn":100},{"ruleId":"71","severity":1,"message":"72","line":64,"column":13,"nodeType":"73","endLine":64,"endColumn":40},{"ruleId":"71","severity":1,"message":"72","line":66,"column":13,"nodeType":"73","endLine":66,"endColumn":41},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]